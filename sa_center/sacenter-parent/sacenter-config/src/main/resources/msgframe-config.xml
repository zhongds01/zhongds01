<?xml version="1.0" encoding="GBK"?>
<config>
	<!-- 客户端所属中心 -->
	<center>saCenter</center>
    <!-- 消费者是推还是拉模式 pull push,一般都是用的推的模式,拉会自动用定时任务去拉，100ms拉一次-->
	<consumeType>pull</consumeType>
	<log4x>true</log4x>
	<persistence>
		<exceptionPersistence>
			<isExceptionPersitence>true</isExceptionPersitence>
			<!-- 持久化类型：db（数据库）,class(实现类) -->
			<exceptionType>class</exceptionType>
			<!-- 生产者异常处理,必须实现com.ai.aif.msgframe.common.ex.exception.IExceptionPersitence接口 -->
			<producerExceptionClass>com.ai.aif.msgframe.common.ex.exception.ProducerExceptionHandle</producerExceptionClass>
			<!-- 消费者异常处理,必须实现com.ai.aif.msgframe.common.ex.exception.IExceptionPersitence接口 -->
			<consumerExceptionClass>com.ai.aif.msgframe.common.ex.exception.ConsumerExceptionHandle</consumerExceptionClass>
		</exceptionPersistence>
			
		<!-- logPersistence 消息是否进行客户端持久化-false、true-->
			<logPersistence>
			<isLogPersistence>false</isLogPersistence> 
			<!--logType 消息客户端持久化方式 -file、db -->
			<logType>class</logType>
			<!-- 生产者日志处理,必须实现com.ai.aif.msgframe.common.log.msglog.ILogPersitence接口 -->
			<producerLogClass>test.MsgRemoteProducerLogImpl</producerLogClass>
			<!-- 消费者日志处理,必须实现com.ai.aif.msgframe.common.log.msglog.ILogPersitence接口 -->
			<consumerLogClass>test.MsgRemoteConsumerLogImpl</consumerLogClass>
	    </logPersistence>
		
	</persistence>
		<!-- half消息客户端回查接口,可选(不发half消息时，不要选),实现TransactionCheckListener 接口的checkLocalTransactionState方法-->
	<transactionCheckListener>com.ai.aif.msgframe.halfmsgtransaction.TransactionCheckListenerImpl</transactionCheckListener>	
	<subscribes>
	    <!-- subscribeCenter 订阅的中心，统一化配置 -->
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="*" transaction="true" implclass="com.ai.sacenter.receive.order.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_570" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_571" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_572" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_573" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_574" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_575" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_576" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_577" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_578" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_579" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
		<subscribe subscribeCenter="saCenter"  subDestination="open_quene" tag="request_580" transaction="true"  implclass="com.asiainfo.sacenter.zjcmcc.receive.dbcp.impl.IMQMsgFConsumeImpl"/>
	</subscribes>
	
	<!--后面都是从控制台拉取得数据,需要发送的topic或者   -->
	<destinations number="4" timeout="2000" resendtimes="3" resenddelay="1000">
		<queue fromCenter="orderCenter" order="false" name="open_quene" belong="saCenter" type="event"	ruleclass="com.ai.aif.msgframe.common.ex.MyDestinationRule"/> 
		<queue fromCenter="saCenter" order="false" name="open_order_quene" belong="saCenter" type="event"   ruleclass="com.ai.aif.msgframe.common.ex.MyDestinationRule"/>
		<topic fromCenter="saCenter" order="false" name="open_ps_quene" belong="saCenter" type="event" ruleclass="com.ai.aif.msgframe.common.ex.MyDestinationRule"/>
	</destinations>
	
	<!-- containClusters: 定义了中心部署在哪些集群上 -->
	<centers>
		<center name="saCenter" containClusters="cluster-1" />
		<center name="orderCenter" containClusters="cluster-2" />
	</centers>
	
	
	<clusters>
	<!-- 测试环境 -->
		<cluster name="cluster-1" type="activemq">
			  <url>failover:(tcp://20.26.25.44:20001,tcp://20.26.25.45:20001,tcp://20.26.25.46:20001)</url>
	          <url>failover:(tcp://20.26.25.44:20002,tcp://20.26.25.45:20002,tcp://20.26.25.46:20002)</url>
	          <url>failover:(tcp://20.26.25.44:20003,tcp://20.26.25.45:20003,tcp://20.26.25.46:20003)</url> 	 -->
		</cluster>
		<cluster name="cluster-2" type="activemq">
			<url>failover:(tcp://20.26.25.44:20001,tcp://20.26.25.45:20001,tcp://20.26.25.46:20001)</url>
            <url>failover:(tcp://20.26.25.44:20002,tcp://20.26.25.45:20002,tcp://20.26.25.46:20002)</url> 
            <url>failover:(tcp://20.26.25.44:20003,tcp://20.26.25.45:20003,tcp://20.26.25.46:20003)</url> 	
		</cluster>
	</clusters>

</config>
